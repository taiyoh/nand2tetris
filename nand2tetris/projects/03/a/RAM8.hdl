// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in=in, sel=address, a=wi1, b=wi2, c=wi3, d=wi4, e=wi5, f=wi6, g=wi7, h=wi8);
    DMux8Way(in=load, sel=address, a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);
    Register(in=wi1, load=l1, out=wo1);
    Register(in=wi2, load=l2, out=wo2);
    Register(in=wi3, load=l3, out=wo3);
    Register(in=wi4, load=l4, out=wo4);
    Register(in=wi5, load=l5, out=wo5);
    Register(in=wi6, load=l6, out=wo6);
    Register(in=wi7, load=l7, out=wo7);
    Register(in=wi8, load=l8, out=wo8);
    Mux8Way16(a=wo1, b=wo2, c=wo3, d=wo4, e=wo5, f=wo6, g=wo7, h=wo8, sel=address, out=out);
}